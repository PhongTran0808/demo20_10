// ====== universe.js (gọi trong script chính) ======
let scene, camera, renderer, stars;

function startUniverse() {
    const canvas = document.getElementById('three-canvas');
    scene = new THREE.Scene();

    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 2000);
    camera.position.z = 800;

    renderer = new THREE.WebGLRenderer({ canvas, alpha: true });
    renderer.setSize(window.innerWidth, window.innerHeight);

    // ====== Tạo sao ======
    const starsGeometry = new THREE.BufferGeometry();
    const starCount = 5000;
    const positions = new Float32Array(starCount * 3);
    const colors = new Float32Array(starCount * 3);

    for (let i = 0; i < starCount; i++) {
        const radius = Math.random() * 1000;
        const angle = Math.random() * Math.PI * 2;
        const height = (Math.random() - 0.5) * 400;
        positions[i * 3] = Math.cos(angle) * radius;
        positions[i * 3 + 1] = height;
        positions[i * 3 + 2] = Math.sin(angle) * radius;
        const color = new THREE.Color(`hsl(${Math.random() * 360}, 70%, 70%)`);
        colors.set([color.r, color.g, color.b], i * 3);
    }

    starsGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));
    starsGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));

    const starsMaterial = new THREE.PointsMaterial({
        size: 2,
        vertexColors: true,
        transparent: true,
        opacity: 0.9
    });

    stars = new THREE.Points(starsGeometry, starsMaterial);
    scene.add(stars);

    window.addEventListener('resize', onResize);
    animate();
}

function onResize() {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
}

function animate() {
    requestAnimationFrame(animate);
    stars.rotation.y += 0.0009; // xoay quanh trục Y
    stars.rotation.x += 0.0004; // xoay quanh trục X
    stars.rotation.z += 0.0002; // xoay quanh trục Z
    renderer.render(scene, camera);
}
